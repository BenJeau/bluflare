name: CD - Create release

on:
  workflow_dispatch:
    inputs:
      bump:
        type: choice
        description: Bump version
        options:
          - major
          - minor
          - patch
        default: patch
        required: true
      dry-run:
        type: boolean
        description: Dry run
        default: false
        required: true

jobs:
  create-tag:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump-version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Get latest tag
        id: get-latest-tag
        run: |
          echo "latest_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - name: Bump version
        id: bump-version
        run: |
          if [ "${{ inputs.bump }}" = "major" ]; then
            echo "new_version=$(echo ${${{ steps.get-latest-tag.outputs.latest_tag }}:1} | awk -F. '{print "v" ($1 + 1) "." $2 "." $3}')" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.bump }}" = "minor" ]; then
            echo "new_version=$(echo ${{ steps.get-latest-tag.outputs.latest_tag }} | awk -F. '{print $1 "." ($2 + 1) "." $3}')" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.bump }}" = "patch" ]; then
            echo "new_version=$(echo ${{ steps.get-latest-tag.outputs.latest_tag }} | awk -F. '{print $1 "." $2 "." ($3 + 1)}')" >> $GITHUB_OUTPUT
          fi
      - name: Create and push tagged commit with version
        run: |
          git tag ${{ steps.bump-version.outputs.new_version }}
          git push origin ${{ steps.bump-version.outputs.new_version }}
  sentry-release:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Create backend Sentry release
        uses: getsentry/action-release@v1.11.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.BACKEND_SENTRY_PROJECT }}
        with:
          environment: production
          ignore_empty: true
          version: ${{ needs.create-tag.outputs.new_version }}
          working_directory: ./backend
      - uses: pnpm/action-setup@v4.1.0
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - uses: actions/setup-node@v4.4.0
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: ./frontend/pnpm-lock.yaml
      - name: Install dependencies
        run: (cd frontend && pnpm install --frozen-lockfile)
      - name: Run typescript compilation
        run: (cd frontend && pnpm build-maps)
      - name: Create frontend Sentry release
        uses: getsentry/action-release@v1.11.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.FRONTEND_SENTRY_PROJECT }}
        with:
          environment: production
          ignore_empty: true
          version: ${{ needs.create-tag.outputs.new_version }}
          sourcemaps: ./dist/assets
          working_directory: ./frontend
  build-and-push-docker-images:
    needs: create-tag
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set lowercase repository name
        id: repo
        run: echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.REPO_LOWER }}/backend:${{ needs.create-tag.outputs.new_version }}
            ghcr.io/${{ steps.repo.outputs.REPO_LOWER }}/backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy-to-do:
    needs: build-and-push-docker-images
    uses: ./.github/workflows/deploy_do.yml
    secrets: inherit
